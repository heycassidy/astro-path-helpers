import { inflect, pluralize, singularize } from "inflection"
import type { ResourceConfig } from "./integration.js"

export function generatePathHelpers(resources: ResourceConfig[]): string {
  const lines: string[] = [
    "// This file is auto-generated by astro-path-helpers",
    "// Do not edit manually",
    "",
    "// path helpers",
  ]

  for (const resource of resources) {
    const plural = pluralize(resource.name)
    const singular = singularize(resource.name)
    const basePath = resource.path || plural
    const fullPath = basePath

    // index path function
    lines.push(`export function ${plural}Path(): string {`)
    lines.push(`  return "/${fullPath}";`)
    lines.push("}")
    lines.push("")

    // single resource path function
    const params = `${singular}Id: string`

    lines.push(`export function ${singular}Path(${params}): string {`)
    lines.push(`  return \`/${fullPath}/\${${singular}Id}\`;`)
    lines.push("}")
    lines.push("")
  }

  return lines.join("\n")
}

export function generateTypeDeclarations(resources: ResourceConfig[]): string {
  const lines: string[] = [
    "// This file is auto-generated by astro-path-helpers",
    "// Do not edit manually",
    "",
    "declare module 'astro-path-helpers' {",
  ]

  for (const resource of resources) {
    const plural = pluralize(resource.name)
    const singular = singularize(resource.name)

    // Export type declaration for the index path function
    lines.push(`  export function ${plural}Path(): string;`)

    // Export type declaration for the single resource path function
    lines.push(
      `  export function ${singular}Path(${singular}Id: string): string;`,
    )
  }

  lines.push("}")

  return lines.join("\n")
}
